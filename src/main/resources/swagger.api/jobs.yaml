openapi: 3.0.0
info:
  title: Data Export Spring Jobs
  version: v1
servers:
  - url: https://localhost/data-export-spring/
paths:
  /jobs:
    get:
      description: Get jobs fy filter
      operationId: getJobs
      parameters:
        - $ref: "#/components/parameters/trait_pageable_offset"
        - $ref: "#/components/parameters/trait_pageable_limit"
        - $ref: "#/components/parameters/trait_queryable_query"
      responses:
        "200":
          description: Jobs successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jobCollection"
        "400":
          description:
            Bad request, e.g. malformed request body or query parameter.
            Details of the errors (e.g. name of the parameter or line/character number
            with malformed data) provided in the response.
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
    post:
      description: Create or update a job
      operationId: upsertJob
      parameters:
        - name: X-Okapi-Tenant
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Job updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"
        "201":
          description: Job created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/job"
        required: true
  /jobs/{id}:
    get:
      description: Get a job by the job ID
      operationId: getJobById
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the job
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: Job successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"
        "400":
          description:
            Bad request, e.g. malformed request body or query parameter.
            Details of the errors (e.g. name of the parameter or line/character number
            with malformed data) provided in the response.
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "404":
          description: Job with a given ID not found
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
  /jobs/{id}/resend:
    post:
      description: resend exported file by the job ID
      operationId: resendExportedFile
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the job
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "201":
          description: Resend job created
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "404":
          description: ExportFile with a given Job ID not found
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal server errors
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
  /jobs/{id}/download:
    get:
      description: Download exported file by the job ID
      operationId: downloadExportedFileByJobId
      parameters:
        - name: id
          in: path
          required: true
          description: UUID of the job
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: Export file successfully retrieved
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
components:
  schemas:
    jobStatus:
      $ref: "../../../../folio-export-common/schemas/jobStatus.json#/JobStatus"
    exportType:
      $ref: "../../../../folio-export-common/schemas/exportType.json#/ExportType"
    presignedUrl:
      $ref: "../../../../folio-export-common/schemas/exportFilePresignedUrl.json#/PresignedUrl"
    job:
      $ref: "../../../../folio-export-common/schemas/job.json#/Job"
    LegacyJob:
      $ref: "../../../../folio-export-common/schemas/bursar-export/legacy/legacyJob.json#/LegacyJob"
    LegacyJobCollection:
      $ref: "../../../../folio-export-common/schemas/bursar-export/legacy/legacyJobCollection.json#/LegacyJobCollection"
    jobCollection:
      $ref: "../../../../folio-export-common/schemas/jobCollection.json#/JobCollection"
    userdataCollection:
      $ref: "../../../../folio-export-common/schemas/user/userCollection.json#/UserCollection"
    configurationdataCollection:
      $ref: "../../../../folio-export-common/schemas/configuration/configurationCollection.json#/ConfigurationCollection"
    errors:
      $ref: "../../../../folio-export-common/schemas/common/errors.json#/Errors"
    identifierType:
      $ref: "../../../../folio-export-common/schemas/bulk-edit/identifierType.json#/IdentifierType"
    entityType:
      $ref: "../../../../folio-export-common/schemas/bulk-edit/entityType.json#/EntityType"
    progress:
      $ref: "../../../../folio-export-common/schemas/progress.json#/Progress"
    UUID:
      type: string
      format: uuid
  parameters:
    trait_queryable_query:
      name: query
      in: query
      description: A query string to filter rules based on matching criteria in fields.
      schema:
        type: string
    trait_pageable_offset:
      name: offset
      in: query
      description:
        Skip over a number of elements by specifying an offset value for
        the query
      schema:
        default: 0
        minimum: 0
        maximum: 2147483647
        type: integer
    trait_pageable_limit:
      name: limit
      in: query
      description: Limit the number of elements returned in the response
      schema:
        default: 10
        minimum: 0
        maximum: 2147483647
        type: integer
  examples:
    errors:
      value:
        $ref: "../../../../folio-export-common/examples/errors.sample"
